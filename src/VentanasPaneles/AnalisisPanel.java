package VentanasPaneles;

import DictionaryDB.ConnectionDB;
import ExpandID.ExpandBasic;
import ExtractID.Main;
import Listas.Clase;
import SplitID.GreedyPaper;
import SplitID.SamuraiPaper;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.*;

/**
 *
 * @author javier
 */
public class AnalisisPanel extends javax.swing.JDialog {

    /**
     * A return status code - returned if Cancel button has been pressed
     */
    public static final int RET_CANCEL = 0;
    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final int RET_OK = 1;

    
    private MiModelo modeloTabla;
    private MiJTable tablaElem;
    
    private Set<String> setIds;
    
    private Map<String,String> mapIdsGreedy;
    private Map<String,String> mapIdsSamurai;
    
    private Map<String,String> mapIdsExGreedy;
    private Map<String,String> mapIdsExSamurai;
    
    
    public AnalisisPanel(java.awt.Frame parent, boolean modal,Set<String> setIds,Clase clase) {
        super(parent, modal);
        initComponents();
        
        //Se inician tablas de frecuencias
        ConnectionDB.AbrirConBD();
        SamuraiPaper.initTables(clase);
        ConnectionDB.CerrarConBD();
        //
        
        
        jRadioBGreedy.setSelected(true);
        ButtonGroup group = new ButtonGroup();
        group.add(jRadioBGreedy);
        group.add(jRadioBSam);
        
        ButtonGroup group2 = new ButtonGroup();
        group2.add(jRadioBdeGre);
        group2.add(jRadioBdeSam);
        
        
        this.mapIdsGreedy = new HashMap<>();
        this.mapIdsSamurai = new HashMap<>();
        
        this.mapIdsExGreedy = new HashMap<>();
        this.mapIdsExSamurai = new HashMap<>();
        
        this.setIds = setIds;
               
        
        modeloTabla = new MiModelo();
        tablaElem = new MiJTable(modeloTabla);
        jScrollSplit.setViewportView(tablaElem);

        modeloTabla.addColumn("ID Capturado");       
        
        Object[] filaTabla = new Object[3];
        String nomIde;
        String splitIde="";
        
        if(setIds!=null && !setIds.isEmpty()){
                     
            
            for(String ide: setIds){
                
                filaTabla[0]= "<html><b>"+ide+"</b></html>";
                modeloTabla.addRow(filaTabla);
            }
        }
        
        tablaElem.autoAjuste();

        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {

            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });
    }
    
        //permite sacar el html limpiando los valores
    private String cleanHtml(String html){       
        
        Pattern pattern = Pattern.compile("<html><b>(.*?)</b></html>");
        Matcher matcher = pattern.matcher(html);
        
        if(matcher.find()){
            return matcher.group(1);
        }
        
        return "";
    
    }
    

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }  

    public Map<String, String> getMapIdsSamurai() {
        return mapIdsSamurai;
    }

    public Map<String, String> getMapIdsGreedy() {
        return mapIdsGreedy;
    }
    
    
    public Map<String, String> getMapIdsExGreMap() {
        return mapIdsExGreedy;
    } 

    public Map<String, String> getMapIdsExSamurai() {
        return mapIdsExSamurai;
    }
    
    

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jScrollSplit = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jRadioBGreedy = new javax.swing.JRadioButton();
        jRadioBSam = new javax.swing.JRadioButton();
        jButtonDiv = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButtonExp = new javax.swing.JButton();
        jRadioBdeGre = new javax.swing.JRadioButton();
        jRadioBdeSam = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();

        jButton2.setText("G");

        setTitle("Análisis de Identificadores");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        cancelButton.setText("Cerrar");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Técnicas de División"));

        jRadioBGreedy.setText("Greedy");

        jRadioBSam.setText("Samurai");

        jButtonDiv.setText("Dividir !");
        jButtonDiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDivActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioBGreedy)
                    .addComponent(jRadioBSam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonDiv, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jRadioBGreedy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioBSam)
                .addGap(0, 1, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonDiv)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Expandir Ids"));
        jPanel2.setPreferredSize(new java.awt.Dimension(191, 80));

        jButtonExp.setText("Expandir !");
        jButtonExp.setEnabled(false);
        jButtonExp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExpActionPerformed(evt);
            }
        });

        jRadioBdeGre.setText("De greedy");
        jRadioBdeGre.setEnabled(false);

        jRadioBdeSam.setText("De Samurai");
        jRadioBdeSam.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRadioBdeGre)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jRadioBdeSam)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jButtonExp)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonExp)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jRadioBdeGre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRadioBdeSam))
        );

        jButton1.setText("Tab");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cancelButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollSplit, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollSplit, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton)
                .addGap(112, 112, 112))
        );

        setSize(new java.awt.Dimension(542, 441));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void jButtonDivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDivActionPerformed

        boolean greedy = jRadioBGreedy.isSelected();

        String splitIde;
        
        ConnectionDB.AbrirConBD();

        for (String ide : setIds) {

            splitIde = greedy ? GreedyPaper.ejecutar(ide) : SamuraiPaper.ejecutar(ide);

            splitIde = splitIde.replaceAll(" ", "-");//para que se destaque la separación

            if (greedy) {
                mapIdsGreedy.put(ide, splitIde);
            } else {
                mapIdsSamurai.put(ide, splitIde);
            }
        }
        
        ConnectionDB.CerrarConBD();

        //carga tabla
        int colNum = modeloTabla.getColumnCount();

        modeloTabla.addColumn(greedy ? "DIVISIÓN GREEDY" : "DIVISIÓN SAMURAI");

        Object elem, elem2;
        
        String cleanHtml;

        for (int i = 0; i < modeloTabla.getRowCount(); i++) {

            elem = modeloTabla.getValueAt(i, 0);
            
            cleanHtml = cleanHtml(elem.toString());
            
            elem2 = greedy ? mapIdsGreedy.get(cleanHtml) : mapIdsSamurai.get(cleanHtml);

            modeloTabla.setValueAt(elem2, i, colNum);

        }
        
        tablaElem.autoAjuste();
        
        if (greedy) {
            jRadioBGreedy.setEnabled(false);
            jRadioBSam.setSelected(true);
            //
            jRadioBdeGre.setEnabled(true);
            jRadioBdeGre.setSelected(true);
        } else {
            jRadioBSam.setEnabled(false);
            jRadioBGreedy.setSelected(true);
            //
            jRadioBdeSam.setEnabled(true);            
            jRadioBdeSam.setSelected(true);
        }
        
        if(!jButtonExp.isEnabled()){jButtonExp.setEnabled(true);}
        
        if (!jRadioBGreedy.isEnabled() && !jRadioBSam.isEnabled()) {
            jButtonDiv.setEnabled(false);
        }

    }//GEN-LAST:event_jButtonDivActionPerformed

    private void jButtonExpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExpActionPerformed
        
        boolean deGreedy = jRadioBdeGre.isSelected();
        
        int colNum = modeloTabla.getColumnCount();
        
        String colNam = deGreedy ? "DIVISIÓN GREEDY" : "DIVISIÓN SAMURAI";
        
        int readCol = 0;
        
        for(int j=0;j<colNum;j++){//busa el nro de la columna
            if(modeloTabla.getColumnName(j).equals(colNam)){
                readCol = j;
            }
        }        
        
        Object elem, elem2;
        String arrayElem[];
        
        modeloTabla.addColumn(deGreedy ? "Expansión de GREEDY" : "Expansión de SAMURAI");

        for (int i = 0; i < modeloTabla.getRowCount(); i++) {
            
            elem = modeloTabla.getValueAt(i, readCol);
            
            arrayElem = elem.toString().split("-");
            
            String append = "";
            
            ConnectionDB.AbrirConBD();
            
            for(String s : arrayElem){
            
                append += ExpandBasic.ejecutar(s) + " ";
                
            }
            
            ConnectionDB.CerrarConBD();
            
            elem2 = append.trim().isEmpty()?"":append.substring(0, append.length()-1);
            
            if (deGreedy) {
                mapIdsExGreedy.put(elem.toString(), elem2.toString());
            }else{
                mapIdsExSamurai.put(elem.toString(), elem2.toString());
            }
            
            modeloTabla.setValueAt(elem2, i, colNum);
        
        }
        
        tablaElem.autoAjuste();
        
        if (deGreedy) {
            jRadioBdeGre.setEnabled(false);
            jRadioBdeSam.setSelected(true);        
        }else{
            jRadioBdeSam.setEnabled(false);
            jRadioBdeGre.setSelected(true);        
        }

        if (!jRadioBdeGre.isEnabled() && !jRadioBdeSam.isEnabled()) {
            jButtonExp.setEnabled(false);
        }
    }//GEN-LAST:event_jButtonExpActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        SamuraiFreqTable s = new SamuraiFreqTable(new javax.swing.JFrame(), true,SamuraiPaper.getLocalFreqTable(), SamuraiPaper.getGlobalFreqTable());
        
        s.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonDiv;
    private javax.swing.JButton jButtonExp;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioBGreedy;
    private javax.swing.JRadioButton jRadioBSam;
    private javax.swing.JRadioButton jRadioBdeGre;
    private javax.swing.JRadioButton jRadioBdeSam;
    private javax.swing.JScrollPane jScrollSplit;
    // End of variables declaration//GEN-END:variables
    private int returnStatus = RET_CANCEL;
}
