/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package VentanasPaneles;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.Set;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JTable;
import javax.swing.KeyStroke;

/**
 *
 * @author javier
 */
public class ExpandPanel extends javax.swing.JDialog {

    /**
     * A return status code - returned if Cancel button has been pressed
     */
    public static final int RET_CANCEL = 0;
    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final int RET_OK = 1;

    private MiModelo modeloTabla;
    private JTable tablaElem;
    private Set<String> lisPhrase;
    private Set<String> lisIdsSplited;
    
    public ExpandPanel(java.awt.Frame parent, boolean modal, Set<String> lisPhrase, Set<String> lisIdsSplited) {
        super(parent, modal);
        initComponents();
        
        this.lisPhrase = lisPhrase;
        this.lisIdsSplited = lisIdsSplited;        
        
        Object[] filaTabla = new Object[1];

        modeloTabla = new MiModelo();
        tablaElem = new JTable(modeloTabla);
        jScrollids.setViewportView(tablaElem);

        modeloTabla.addColumn("IDENTIFICADORES");
        
        for(String id:this.lisIdsSplited){
            filaTabla[0] = id.toLowerCase();
            modeloTabla.addRow(filaTabla);            
        }       
        
        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });
    }
    
    private String matchAcr(String acronim, Set<String> listToExp) {

        String ret = null;

        for (String lTe : listToExp) {
            
            ret = null;

            if (acronim.charAt(0) == lTe.charAt(0)) {

                char[] acr = acronim.toCharArray();
                char[] candidate = lTe.toCharArray();

                ret = checkCandidate(acr, candidate);

                if (ret != null) {
                    return ret;
                }
            }

        }

        return ret;

    }
    
    
    
    private String checkCandidate(char acr[],char candidate[]){
        String ret = formatRed(acr[0]);
        
        int i=1,j=1;//arranca en 1 porque en 0 se que coinciden        
        
        while(j<candidate.length){
        
            if(i<acr.length && acr[i]==(candidate[j])){
                ret += formatRed(candidate[j]);
                j++;
                i++;                
            }else{
                ret += candidate[j];
                j++;                
            }        
        }
        
        if(i==acr.length){
           //se consumio todo el acronimo 
           return ret;
                    
        }else{
           return null;            
        }

    }
    
    private String formatRed(Object s){
        return "<b><span style=\"color: #8B0000;\">"+s+"</span></b>";
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cancelButton = new javax.swing.JButton();
        jScrollids = new javax.swing.JScrollPane();
        jButton1 = new javax.swing.JButton();
        jScrollExpand = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Expandir Identificadores");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        cancelButton.setText("Cerrar");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Expandir ->");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cancelButton)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollids, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollExpand, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addComponent(jButton1)
                .addContainerGap(264, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollids, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                    .addComponent(jScrollExpand))
                .addGap(18, 18, 18)
                .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(47, 47, 47))
        );

        setSize(new java.awt.Dimension(601, 445));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        Object[] filaTabla = new Object[1];

        modeloTabla = new MiModelo();
        tablaElem = new JTable(modeloTabla);
        jScrollExpand.setViewportView(tablaElem);

        modeloTabla.addColumn("Posible Expansi√≥n");

        for (String id : lisIdsSplited) {            
            
            String partId[] = id.split("-");
            String strExp = "";
            
            for(String idpart: partId){
            
                String exp = matchAcr(idpart.toLowerCase(), lisPhrase);
                
                if (exp == null) {
                    //si es null no pudo encontrar alguna palabra para expandir
                    strExp += formatRed(idpart.toLowerCase());
                }else{
                    strExp += exp;
                }

                strExp += "-";
            
            }
            
            strExp = strExp.substring(0, strExp.length()-1);

            filaTabla[0] = "<html>"+strExp+"</html>";
            modeloTabla.addRow(filaTabla);
        }

    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollExpand;
    private javax.swing.JScrollPane jScrollids;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;
}
